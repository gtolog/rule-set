name: Resolve

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  resolve-hosts-and-save-ipcidr:
    runs-on: ubuntu-latest

    env:
      RESOLVER1: "223.5.5.5"
      RESOLVER2: "119.29.29.29"
      INPUT: "DoH-elf.list"
      OUTPUT: "ipcidr.txt"
      
    steps:
      - uses: actions/checkout@v3  # Checkout the repo

      - name: Ensure dig is installed
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils

      - name: Check for the input file
        run: |
          if [ ! -f "$INPUT" ]; then
            echo "Input file $INPUT not found, please check if it's committed to the repository."
            exit 1
          fi

      - name: Extract hostnames, resolve IPs, and extract IP-CIDRs
        run: |
          echo "Resolved IPs and Extracted IP-CIDRs:"
          
          # Create an empty file for IP-CIDRs and resolved IPs
          > $OUTPUT
          
          # Function to resolve CNAMEs to IPs recursively
          resolve_cname() {
            local domain="$1"
            # Start with empty IPs
            local ips=""
            # Try resolving the domain
            ips=$(dig +short "$domain" | grep -v "^\;")  # Exclude comments
            if [[ -z "$ips" ]]; then
              # If no IPs found, check for CNAMEs
              cname=$(dig +short CNAME "$domain" | grep -v "^\;")
              if [[ -n "$cname" ]]; then
                echo "CNAME found: $domain -> $cname"
                # Recursively resolve the CNAME
                resolve_cname "$cname"
              fi
            else
              # If IPs are found, return them
              echo "$ips"
            fi
          }

          # Process each line from the input file
          grep -E '^HOST,|^IP-CIDR,' $INPUT | while IFS=',' read -r type value other; do
            if [[ "$type" == "HOST" ]]; then
              # Try resolving the hostname with two resolvers from environment variables
              ips=""
              for resolver in "$RESOLVER1" "$RESOLVER2"; do
                # Get all available IPs for the domain
                ips=$(dig @"$resolver" +short "$value" | grep -v "^\;")
                if [[ -n "$ips" ]]; then
                  break
                fi
              done

              if [[ -n "$ips" ]]; then
                # For each resolved IP, check if it's a CNAME and resolve it
                for ip in $ips; do
                  # If it's a CNAME, resolve it further
                  if [[ "$ip" =~ \.$ ]]; then  # Check if it's a CNAME (ends with a dot)
                    resolved_ips=$(resolve_cname "$ip")
                    for resolved_ip in $resolved_ips; do
                      echo "$value -> $resolved_ip"
                      echo "$resolved_ip" >> $OUTPUT
                    done
                  else
                    echo "$value -> $ip"
                    echo "$ip" >> $OUTPUT
                  fi
                done
              else
                echo "$value -> No IP found"
              fi
            elif [[ "$type" == "IP-CIDR" ]]; then
              # Save IP-CIDR directly to the file
              echo "$value" >> $OUTPUT
              echo "Saved IP-CIDR: $value"
            fi
          done
          
          # Remove duplicates and sort the final list of IPs
          echo "Final IP-CIDR List (including resolved IPs):"
          sort -u $OUTPUT -o $OUTPUT
          cat $OUTPUT
