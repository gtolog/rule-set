name: resolve-hosts-and-save-ipcidr

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  resolve-hosts-and-save-ipcidr:
    runs-on: ubuntu-latest

    env:
      RESOLVER1: "223.5.5.5"
      RESOLVER2: "119.29.29.29"
      INPUT: "DoH-elf.list"
      HOSTLIST: "host-list.txt"
      IPCIDRLIST: "ipcidr-list.txt"
      OUTPUT: "ipcidr.txt"
      
    steps:
      - uses: actions/checkout@v3  # Checkout the repo

      - name: Extract hostnames and IP-CIDRs
        run: |
          # Create empty files for hostnames and IP-CIDRs
          > $HOSTLIST
          > $IPCIDRLIST
          
          # Process each line from the input file
          grep -E '^HOST,|^IP-CIDR,' $INPUT | while IFS=',' read -r type value other; do
            if [[ "$type" == "HOST" ]]; then
              # Save HOST directly to the file
              echo "$value" >> $HOSTLIST
              echo "Saved HOST: $value"
            elif [[ "$type" == "IP-CIDR" ]]; then
              # Save IP-CIDR directly to the file
              echo "$value" >> $IPCIDRLIST
              echo "Saved IP-CIDR: $value"
            fi
          done

      - name: Resolve DNS with dig
        run: |
          echo "Resolving domains using dig..."
          > resolved_ips.txt  # Create an empty file to store results
        
          # Read domains from the host-list.txt and resolve them using dig
          while IFS= read -r domain; do
            echo "Resolving $domain..."
            # Resolve the domain and append IPs to resolved_ips.txt
            dig +short $domain >> resolved_ips.txt
          done < $HOSTLIST

      - name: Process and extract IPs and CIDRs
        run: |
          echo "Processing resolved IPs and extracting CIDRs"
          
          # Append resolved IPs to the IP-CIDR list
          cat resolved_ips.txt >> $IPCIDRLIST

          # Also append the original IP-CIDR list
          cat $IPCIDRLIST >> $OUTPUT

          # Remove duplicates and sort the final list of IPs and CIDRs
          sort -u $OUTPUT -o $OUTPUT  # Sort and remove duplicates in place
          cat $OUTPUT  # Display the final result
