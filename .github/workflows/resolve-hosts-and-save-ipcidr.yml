name: resolve-hosts-and-save-ipcidr

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  resolve-hosts-and-save-ipcidr:
    runs-on: ubuntu-latest

    env:
      RESOLVER1: "223.5.5.5"
      RESOLVER2: "119.29.29.29"
      INPUT: "DoH-elf.list"
      HOSTLIST: "host-list.txt"
      IPCIDRLIST: "ipcidr-list.txt"
      OUTPUT: "ipcidr.txt"
      
    steps:
      - uses: actions/checkout@v3  # Checkout the repo

      - uses: actions/setup-go@v3
        with:
          go-version: 1.20  # Use a Go version that supports dnsx

      - name: Install dnsx
        run: |
          # Install dnsx if not already installed
          if [ ! -x /home/runner/go/bin/dnsx ]; then
            echo "Installing dnsx..."
            go install github.com/projectdiscovery/dnsx/cmd/dnsx@latest
          fi

      - name: Extract hostnames and IP-CIDRs
        run: |
          # Create empty files for hostnames and IP-CIDRs
          > $HOSTLIST
          > $IPCIDRLIST
          
          # Process each line from the input file
          grep -E '^HOST,|^IP-CIDR,' $INPUT | while IFS=',' read -r type value other; do
            if [[ "$type" == "HOST" ]]; then
              # Save HOST directly to the file
              echo "$value" >> $HOSTLIST
              echo "Saved HOST: $value"
            elif [[ "$type" == "IP-CIDR" ]]; then
              # Save IP-CIDR directly to the file
              echo "$value" >> $IPCIDRLIST
              echo "Saved IP-CIDR: $value"
            fi
          done

      - name: Use dnsx to resolve domains
        run: |
          echo "Resolving domains with dnsx..."
          /home/runner/go/bin/dnsx -l ${{ github.workspace }}/$HOSTLIST -r "$RESOLVER1,$RESOLVER2" -o ${{ github.workspace }}/dnsx_output.txt

      - name: Process and extract IPs and CIDRs
        run: |
          echo "Processing resolved IPs and extracting CIDRs"

          # Append the dnsx output to ipcidr-list.txt
          cat ${{ github.workspace }}/dnsx_output.txt >> ${{ github.workspace }}/$IPCIDRLIST

          # Also append the IP-CIDR list directly from the original file
          cat ${{ github.workspace }}/$IPCIDRLIST >> $OUTPUT

          # Remove duplicates and sort the final list of IPs and CIDRs
          sort -u $OUTPUT -o $OUTPUT  # Sort and remove duplicates in place
          cat $OUTPUT  # Display the final result
